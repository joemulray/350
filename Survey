import java.util.Scanner;
import java.lang.String;
import java.nio.file.Paths;
import java.nio.file.Path;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.util.List;
import java.util.Arrays;
import java.io.IOException;
import java.io.File;
import java.util.ArrayList;

//String tempSurvey = "tmpSurvey\\";
//String tempTest = "tmpTest\\";

public class Survey{


   public static void main(String[] args) //initial procedure
   {
       System.out.println("Welcome");
       System.out.println("1) Survey Menu.");
       System.out.println("2) Test Menu.");
       System.out.println("E) Exit.");

       Scanner input = new Scanner(System.in);
       String firstValue = input.nextLine();
       switch(firstValue)
       {
           case "1":
               SurveyC();//HW2
               break;
           case "2":
               Test();//HW2
               break;
           case "3":
           case "e":
           case "E":
           case "exit":
           case "Exit":
               Exit();
               break;
           default :
               System.out.println("Please enter a valid value \n"); //print this out if input is invalid and repeat.
               main(args);
       }
   }

   public static void SurveyC()
   {
       String[] args={};

       System.out.println("1) Create a new Survey."); //HW2
       System.out.println("2) Display a Survey."); //HW2
       System.out.println("3) Load a Survey."); //HW2
       System.out.println("4) Save a Survey."); //HW2
       System.out.println("5) Edit a Survey."); //HW3
       System.out.println("6) Take a Survey."); //HW3
       System.out.println("7) Grade a Survey."); //HW3
       System.out.println("8) Back.");
       System.out.println("E) Exit."); //8, e, E, Exit, exit will work

       Scanner input = new Scanner(System.in);
       String surveyValue = input.nextLine();
       switch(surveyValue)
       {
           case "1":
               CreateSurvey();//HW2
               break;
           case "2":
               DisplaySurvey();//HW2
               break;
           case "3":
               LoadSurvey();//HW2
               break;
           case "4":
               SaveSurvey();//HW2
               break;
           case "5":
               EditSurvey();//HW3
               break;
           case "6":
               TakeSurvey();//HW3
               break;
           case "7":
               GradeSurvey();//HW3
               break;
           case "8":
           case "back":
           case "b":
               main(args);
               break;
           case "9":
           case "e":
           case "E":
           case "exit":
           case "Exit":
               Exit();
               break;
           default :
               System.out.println("Please enter a valid value \n");
               SurveyC();

       }
   }

   public static void Test()
   {
       String[] args={};

       System.out.println("1) Create a new Test.");
       System.out.println("2) Display a Test.");
       System.out.println("3) Load a Test.");
       System.out.println("4) Save a Test.");
       System.out.println("5) Edit a Test."); //HW3
       System.out.println("6) Take a Test."); //HW3
       System.out.println("7) Grade a Test."); //HW3
       System.out.println("8) Back.");
       System.out.println("E) Exit"); //8, e, E, Exit, exit will work

       Scanner input = new Scanner(System.in);
       String testValue = input.nextLine();
       switch(testValue)
       {
           case "1":
               CreateTest();//HW2
               break;
           case "2":
               DisplayTest();//HW2
               break;
           case "3":
               LoadTest();//HW2
               break;
           case "4":
               SaveTest();//HW2
               break;
           case "5":
               EditTest();//HW3
               break;
           case "6":
               TakeTest();//HW3
               break;
           case "7":
               GradeTest();//HW3
               break;
           case "8":
           case "back":
           case "b":
               main(args);
               break;
           case "9":
           case "e":
           case "E":
           case "exit":
           case "Exit":
               Exit();
               break;
           default :
               System.out.println("Please enter a valid value \n");
               Test();

       }
   }

   //-------------------------Survey-------------------------
   public static void CreateSurvey()
   {
       System.out.println("Please select the type of survey"); //HW2
       System.out.println("1) True/False"); //HW2
       System.out.println("2) Multiple Choice"); //HW2
       System.out.println("3) Short Answer"); //HW2
       System.out.println("4) Essay Answer"); //HW2
       System.out.println("5) Matching"); //HW2
       System.out.println("6) Rank the choices"); //HW2
       System.out.println("7) Back");
       System.out.println("E) Exit");

       Scanner input = new Scanner(System.in);
       String createSurveyValue = input.nextLine();
       switch(createSurveyValue)
       {
           case "1":
               Bool(); //done
               break;
           case "2":
               Choices();
               break;
           case "3":
               ShortAns(); //done
               break;
           case "4":
               EssayAns(); //done
               break;
           case "5":
               Matching();
               break;
           case "6":
               Ranking();
               break;
           case "7":
               SurveyC();
               break;
           case "8":
           case "e":
           case "E":
           case "exit":
           case "Exit":
               Exit();
               break;
           default :
               System.out.println("Please enter a valid value \n");
               CreateSurvey();

       }
   }
   public static void DisplaySurvey() //HW2 - show to the screen
   {
       System.out.println("Please enter the name of the survey file that you are looking for. \n");
       Scanner displayingSurvey = new Scanner(System.in); //get the file name
       String displayingSurveyValue = displayingSurvey.nextLine();
       //Find a way to get the display the survey using that name.
       //It can be a text file!... now, if it is a txt file how would I look for "Question" and "Answer"?
       //Maybe print Question, then write whatever you want under question and when searching just return the line under question.
       //Kinda the same for XML since they are classes.
       //Open XML file that was called
       //read XML
       //Loop it.
       //End loop is displayingSurveyValue == "quit"
   }
   public static void LoadSurvey() //HW2 - load to memory
   {
       System.out.println("Please enter the name of the file that you want to load. Only the name, no txt required. \n");
       Scanner loadingSurvey = new Scanner(System.in); //get the file name
       String loadingSurveyValue = loadingSurvey.nextLine() + ".txt";
   }

   public static void SaveSurvey() //HW2
   {
       //After Save is clicked, get all the data from the current temp file for survey and parse it. Then copy all those files and put them in another folder.
       //Delete old temp folder.
       //New folder should contain the survey file and the survey name.
       //In order:
       //Get all files from temp folder
       //Put them into 1 file named "Survey #"
       //Copy files into new folder named Survey
       //Inside Survey create another folder named Survey #.
       //delete old folder.
   }
   public static void EditSurvey() //HW3
   {
       System.out.println("Not ready until Homework 3");
   }
   public static void TakeSurvey() //HW3
   {
       System.out.println("Not ready until Homework 3");
   }

   public static void GradeSurvey() //HW3
   {
       System.out.println("Not ready until Homework 3");
   }

   //-----------------------------Survey Creation----------------------
   //Find a way to write into XML using Java. - or just use a txt file.
   /*
       Summary:
       Creates a file with users named file and question.
    */
   public static void Bool() //Working as of 4/8/2017
   {
       String[] tF = {"T/F"}; //What the user sees.
       String[] answerBoolValue = {}; //Blank
       String tempSurvey = "tmpSurvey\\";

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after starting a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameBool = new Scanner(System.in);
       String fileNameValue = fileNameBool.nextLine();
       if(fileNameValue.equals("quit"))
       {
           CreateSurvey();
       }
       System.out.println("Enter the prompt for your True/False question:"); //Replace prompt to question?
       Scanner questionBool = new Scanner(System.in); //using different variables just in case an error will occur in the future
       String questionBoolValue = questionBool.nextLine(); //Are these supposed to be 1 question per file or multiple?

       CreateWrite(questionBoolValue, tF, answerBoolValue, fileNameValue, tempSurvey);
       System.out.println("question created.");
       CreateSurvey(); //go back to creating the survey.
   }

   /*
       Summary:
       Create a question with users named file, question, choices.
    */
   public static void Choices() //Working as of 4/12/2017
   {
       String tempSurvey = "tmpSurvey\\";
       Scanner optionChoice = new Scanner(System.in);
       List<String> optionChoiceList = new ArrayList<String>();
       String[] optionChoiceResult = new String[optionChoiceList.size()];
       String[] blank = {};
       char quit = 'Y';
       int i =0; //how many times a loop ran

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after starting a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameChoices = new Scanner(System.in);
       String fileNameChoicesValue = fileNameChoices.nextLine();
       if(fileNameChoicesValue.equals("quit")) //go back.
       {
           CreateSurvey();
       }
       System.out.println("Enter the prompt for your multiple choice question:"); //Get choice question
       Scanner questionChoice = new Scanner(System.in);
       String questionChoiceValue = questionChoice.nextLine();


       while(quit != 'N') //exit the loop so that the user can have as many options
       {
           System.out.println("Enter choices "+ i + "."); //Get choice options
           String optionChoiceValue = optionChoice.nextLine(); //gets user choice
           optionChoiceList.add(optionChoiceValue); //add to the list

           System.out.println("Enter another option? (Y/N)"); //It actually takes any inputs. If value starts with N, then that's another story.
           String word = fileNameChoices.next(); //Get the next user input
           word = word.toUpperCase(); //change to uppercase if lowercase
           quit = word.charAt(0); //if it's N, then leave
           i++;
       }
       while(i > 0) {
           optionChoiceResult = optionChoiceList.toArray(optionChoiceResult); //populate the array
           i--;
       }

       CreateWrite(questionChoiceValue, optionChoiceResult, blank, fileNameChoicesValue, tempSurvey);

       System.out.println("question created.");
       CreateSurvey(); //go back to creating the survey.
   }
   /*
       Summary:
       Create a users named file and question.
    */
   public static void ShortAns() //Working since 4/11/2017
   {
       String[] blank = {};
       String tempSurvey = "tmpSurvey\\";

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after creating a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameShortAns = new Scanner(System.in);
       String fileNameShortAnsValue = fileNameShortAns.nextLine();
       if(fileNameShortAnsValue.equals("quit"))
       {
           CreateSurvey();
       }
       System.out.println("Enter the prompt for your short answer question:");
       Scanner questionShort = new Scanner(System.in);
       String questionShortValue = questionShort.nextLine();
       //if questionBoolValue == quit, then quit.
       /*
       System.out.println("Enter correct choice");
       Scanner answerShort = new Scanner(System.in); //Find if there are matching words, so change this
       String[] answerShortValue = {answerShort.nextLine()};
       */
       CreateWrite(questionShortValue, blank, blank, fileNameShortAnsValue, tempSurvey);


   }
   /*
       Summary:
       Create a users named file and question
    */
   public static void EssayAns() //Working since 4/11/2017
   {
       String[] blank = {};
       String tempSurvey = "tmpSurvey\\";

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after creating a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameEssayAns = new Scanner(System.in);
       String fileNameEssayAnsValue = fileNameEssayAns.nextLine();
       if(fileNameEssayAnsValue.equals("quit"))
       {
           CreateSurvey();
       }
       System.out.println("Enter the prompt for your essay answer question:");
       Scanner questionEssay = new Scanner(System.in);
       String questionEssayValue = questionEssay.nextLine();
       //if questionBoolValue == quit, then quit.
       /*
       System.out.println("Enter correct choice");
       Scanner answerEssay = new Scanner(System.in); //Find if there are matching words
       String answerEssayValue = answerEssay.nextLine();
       */
       CreateWrite(questionEssayValue, blank, blank, fileNameEssayAnsValue, tempSurvey);
   }
   /*
       Summary:
       Create a users named file, question and matching options
    */
   public static void Matching()
   {

       System.out.println("Enter the prompt for your matching question:");
       Scanner questionMatch = new Scanner(System.in);
       String questionMatchValue = questionMatch.nextLine();
       //if questionBoolValue == quit, then quit.
       System.out.println("Enter correct choice");
       Scanner answerMatch = new Scanner(System.in);
       String answerMatchValue = answerMatch.nextLine();

   }
   /*
       Summary:
       Create a users named file, question and ranking options
    */
   public static void Ranking()
   {

       System.out.println("Enter the prompt for your ranking question:");
       Scanner questionRank = new Scanner(System.in);
       String questionRankValue = questionRank.nextLine();
       //if questionBoolValue == quit, then quit.
       System.out.println("Enter correct choice");
       Scanner answerRank = new Scanner(System.in);
       String answerRankValue = answerRank.nextLine();

   }

   //-----------------------------Test -----------------------------
   public static void CreateTest()
   {
       System.out.println("Please select the type of Test"); //HW2
       System.out.println("1) True/False"); //HW2
       System.out.println("2) Multiple Choice"); //HW2
       System.out.println("3) Short Answer"); //HW2
       System.out.println("4) Essay Answer"); //HW2
       System.out.println("5) Matching"); //HW2
       System.out.println("6) Rank the choices"); //HW2
       System.out.println("7) Back");
       System.out.println("E) Exit");

       Scanner input = new Scanner(System.in);
       String createSurveyValue = input.nextLine();
       switch(createSurveyValue)
       {
           case "1":
               TestBool();
               break;
           case "2":
               TestChoices();
               break;
           case "3":
               TestShortAns();
               break;
           case "4":
               TestEssayAns();
               break;
           case "5":
               TestMatching();
               break;
           case "6":
               TestRanking();
               break;
           case "b":
           case "B":
           case "7":
               SurveyC();
               break;
           case "8":
           case "e":
           case "E":
           case "exit":
           case "Exit":
               Exit();
               break;
           default :
               System.out.println("Please enter a valid value \n");
               CreateTest();

       }
   }
   public static void DisplayTest() //HW2
   {
       System.out.println("Please enter the name of the test file that you are looking for. \n");
       Scanner displayingTest = new Scanner(System.in); //get the file name
       String displayingTestValue = displayingTest.nextLine();
   }
   //Find a way to load specific files from an XML
   public static void LoadTest() //HW2
   {
       System.out.println("Please enter the name of the file that you want to load. \n");
       Scanner loadingSurvey = new Scanner(System.in); //get the file name
       String loadingSurveyValue = loadingSurvey.nextLine();
   }
   public static void SaveTest() //HW2
   {
       //Put everything test related into 1 file.
       //file is called "Test #"
   }
   public static void EditTest() //HW3
   {
       System.out.println("Not ready until Homework 3");
       //choose file
       //choose either question or answer
   }
   public static void TakeTest() //HW3
   {
       System.out.println("Not ready until Homework 3");
       //Open selected test file
       //print the test name
       //print first question of the test.
       //wait for users response.
       //check if answer is the same. if Yes, add +1, if no nothing.
       //Loop it until eof
       //Give score that should be #questions / correct - or just don't since we have a gradetest, which should be only for essay
   }

   public static void GradeTest() //HW3
   {
       System.out.println("Not ready until Homework 3");
       //choose file to Grade
       //give score
       //save score in another file
       //not sure how scoring works for now
   }
   //--------------------------Create Test--------------------------
   public static void TestBool() //True or false survey - Working as of 4/8/2017 -
   {
       String[] tF = {"T/F"}; //What the user sees.
       String tempTest = "tmpTest\\";
       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after starting a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameBool = new Scanner(System.in);
       String fileNameValue = fileNameBool.nextLine();
       if(fileNameValue.equals("quit"))
       {
           CreateTest();
       }
       System.out.println("Enter the prompt for your True/False question:"); //Replace prompt to question?
       Scanner questionBool = new Scanner(System.in); //using different variables just in case an error will occur in the future
       String questionBoolValue = questionBool.nextLine(); //Are these supposed to be 1 question per file or multiple?

       System.out.println("Enter correct choice"); //get the answer.
       Scanner answerBool = new Scanner(System.in);
       String[] answerBoolValue = {answerBool.nextLine()}; //one answer, true or false
       //It is an array because of the printing to file function requires an array - especially for future questions
       if(!answerBoolValue[0].equals("t") && !answerBoolValue[0].equals("T") && !answerBoolValue[0].equals("true") && !answerBoolValue[0].equals("True") && !answerBoolValue[0].equals("f") && !answerBoolValue[0].equals("F") && !answerBoolValue[0].equals("false") && !answerBoolValue[0].equals("False") && !answerBoolValue[0].equals("TRUE") && !answerBoolValue[0].equals("FALSE"))
       {
           //System.out.println(answerBoolValue[0]);//debugging. Had issue with != making it loop in here. fixed it by using .equals.
           do
           {
               System.out.println("Your input isn't valid, Please enter a correct value for a true/false question.");
               answerBoolValue[0] = answerBool.nextLine();
               //System.out.println(answerBoolValue[0]);debug
           }while(!answerBoolValue[0].equals("t") && !answerBoolValue[0].equals("T") && !answerBoolValue[0].equals("true") && !answerBoolValue[0].equals("True") && !answerBoolValue[0].equals("f") && !answerBoolValue[0].equals("F") && !answerBoolValue[0].equals("false") && !answerBoolValue[0].equals("False") && !answerBoolValue[0].equals("TRUE") && !answerBoolValue[0].equals("FALSE"));
           CreateWrite(questionBoolValue, tF, answerBoolValue, fileNameValue, tempTest); //write to file
       }
       else
           CreateWrite(questionBoolValue, tF, answerBoolValue, fileNameValue, tempTest);
       System.out.println("question created.");
       CreateSurvey(); //go back to creating the survey.

   }

   public static void TestChoices()
   {
       String tempTest = "tmpTest\\";
       Scanner optionChoice = new Scanner(System.in);
       List<String> optionChoiceList = new ArrayList<String>();
       String[] optionChoiceResult = new String[optionChoiceList.size()];
       Scanner answerChoice = new Scanner(System.in);
       List<String> answerChoiceList = new ArrayList<String>();
       String[] answerChoiceResult = {};

       char quit = 'Y';
       int i =0;

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after starting a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameBool = new Scanner(System.in);
       String fileNameValue = fileNameBool.nextLine();
       if(fileNameValue.equals("quit"))
       {
           CreateTest();
       }
       System.out.println("Enter the prompt for your multiple choice question:"); //Get choice question
       Scanner questionChoice = new Scanner(System.in);
       String questionChoiceValue = questionChoice.nextLine();


       while(quit != 'N') //exit the loop so that the user can have as many options
       {
           System.out.println("Enter choices "+ i+1 + "."); //Get choice options
           String optionChoiceValue = optionChoice.nextLine(); //gets user choice
           optionChoiceList.add(optionChoiceValue); //add to the list

           System.out.println("Enter another option? (Y/N)"); //It actually takes any inputs. If value starts with N, then that's another story.
           String word = questionChoice.next(); //Get the next user input
           word = word.toUpperCase(); //change to uppercase if lowercase
           quit = word.charAt(0); //if it's N, then leave
           i++;
       }
       while(i > 0) {
           optionChoiceResult = optionChoiceList.toArray(optionChoiceResult); //populate the array
           i--;
       }
       while(quit != 'N')
       {
           System.out.println("Enter answer/s " + i+1 +"."); //Get choice answers
           String answerChoiceValue = answerChoice.nextLine();
           answerChoiceList.add(answerChoiceValue);
           //ISSUE HERE - - - - - - - FIX LATER - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - - -
           //Check if the answer choice is part of the options.
           if(!answerChoiceValue.equals(optionChoiceResult))
           { //possible bug when comparing. If answer isn't one of the options, then error. This will not fix it.
               System.out.println("That answer is outside of the scope, please input a correct one.");
               //Add something that will delete that newest input.
               //Debug line before and after that change just to check if it deleted the correct one.
               //Then this will fix it.
           }

           System.out.println("Enter another option? (Y/N)"); //It actually takes any inputs. If value starts with N, then that's another story.
           String word = questionChoice.next(); //Get the next user input
           word = word.toUpperCase(); //change to uppercase if lowercase
           quit = word.charAt(0); //if it's N, then leave
           i++;
       }
       while(i > 0) {
           answerChoiceResult = answerChoiceList.toArray(answerChoiceResult); //populate the array
           i--;
       }

       CreateWrite(questionChoiceValue, optionChoiceResult, answerChoiceResult, fileNameValue, tempTest);

       System.out.println("question created.");
       CreateSurvey();
   }

   public static void TestEssayAns()
   {
       String tempTest = "tmpTest\\";

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after starting a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameBool = new Scanner(System.in);
       String fileNameValue = fileNameBool.nextLine();
       if(fileNameValue.equals("quit"))
       {
           CreateTest();
       }
   }

   public static void TestMatching()
   {
       String tempTest = "tmpTest\\";

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after starting a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameBool = new Scanner(System.in);
       String fileNameValue = fileNameBool.nextLine();
       if(fileNameValue.equals("quit"))
       {
           CreateTest();
       }
   }

   public static void TestRanking()
   {
       String tempTest = "tmpTest\\";

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after starting a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameBool = new Scanner(System.in);
       String fileNameValue = fileNameBool.nextLine();
       if(fileNameValue.equals("quit"))
       {
           CreateTest();
       }
   }

   public static void TestShortAns()
   {
       String tempTest = "tmpTest\\";

       System.out.println("Once you start creating your file Type \"quit\" to go back. You can't go back after starting a question.'");
       System.out.println("Enter the name of the file: ");
       Scanner fileNameBool = new Scanner(System.in);
       String fileNameValue = fileNameBool.nextLine();
       if(fileNameValue.equals("quit"))
       {
           CreateTest();
       }
   }

   //---------------------------Write to text-----------------------
   public static void CreateWrite(String question, String[] options, String[] answer, String fileName, String directory) //This works for both test and Survey
   {
       try {
           new File(directory).mkdirs(); //Create temp folder
           List<String> quest = Arrays.asList("Question:", question, "Options:",  Arrays.toString(options), "Answer: ", Arrays.toString(answer)); //Create a list of questions and answers
           Path file = Paths.get(directory+fileName + ".txt"); //get the file name
           Files.write(file, quest, Charset.forName("UTF-8")); //write all the strings in the list into the file.
       }
       catch(IOException e)
       {
           System.out.println("File Read Error: " + e.getMessage());
           System.out.println("Returning to Survey options");
           CreateSurvey();
       }
   }
   //-----------------------------exit------------------------------
   public static void Exit()
   {
       System.exit(0);
   }

}

/*
Things to do
Move each method to their respective class - before HW1.
Fix method/class calls.
Finish each method - Yea...
*/


